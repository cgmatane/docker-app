server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name test-qr-response.*;

    include /config/nginx/ssl.conf;

    client_max_body_size 0;

    location / {
        include /config/nginx/proxy.conf;
	# include /config/nginx/cors.conf;
        resolver 127.0.0.11 valid=30s;
        proxy_pass http://localhost:8002;
		
        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;

	#add_header 'Access-Control-Allow-Origin' '*';
        #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        #add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        #add_header 'Access-Control-Max-Age' 1728000;
        #add_header 'Content-Type' 'text/plain; charset=utf-8';
        #add_header 'Content-Length' 0;
        # return 204;
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }

    }
	
    location ~ (/test-qr-response)?/socket {
        include /config/nginx/proxy.conf;
        resolver 127.0.0.11 valid=30s;
        proxy_pass http://localhost:4343;
		
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
   }
}
